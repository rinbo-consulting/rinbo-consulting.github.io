<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rinbo Consulting</title>
    <description>A mixture of thoughts on Business Intelligence, MicroStrategy, and IT in general 
</description>
    <link>http://rinbo.consulting/</link>
    <atom:link href="http://rinbo.consulting/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 18 May 2015 14:04:49 +0100</pubDate>
    <lastBuildDate>Mon, 18 May 2015 14:04:49 +0100</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>What is Big Data, and who cares? A non-technical take</title>
        <description>&lt;p&gt;If you work in information technology, or a related field, you can’t have failed to notice one buzzphrase “Big Data”. Seemingly every job description, architectural roadmap, or sales pitch contains it. What does it mean?&lt;/p&gt;

&lt;p&gt;The technology underpinning Big Data (and the history of that is for another post) means that storing, and more importantly, processing and accessing, incredibly large amounts of data is cheaper and more accessible than ever before. Most companies of a reasonable size can keep and analyse more information than they’ve ever been able to.&lt;/p&gt;

&lt;p&gt;So far, so good. The explosion of the worldwide web, and now mobile personal computing devices like phones and tablets, means that there’s far, far more data for companies to look at than ever. Looking back 25 years, financial transactions were probably the highest volume generated by the average (unless I’m overlooking something). EPOS data perhaps, when stores went from manually keying values on a till to scanning barcodes, would also have been (and remains) high volume.&lt;/p&gt;

&lt;p&gt;Buying items in a supermarket though, is nothing compared to the page views, the clicks, the texts, emails, and messages we generate daily. Photos uploaded, tweets posted, steps counted, calories logged, we are now excellent at getting data into electronic repositories.&lt;/p&gt;

&lt;p&gt;All of this is hardly earth-shattering, or unsurprising. What doesn’t often come to mind is what happens to this data “below the surface”. We’re all comfortable with the fact that data displayed on various websites is stored by said sites, but what else do they know about us?&lt;/p&gt;

&lt;p&gt;Let’s take Facebook as an example. If you have a Facebook account, and have logged in on a computer, they can track every visit you make to a site with has a Facebook integration, whether that to log in at that site, or just to share the content. Even if you’ve logged out, they still know which of these sites you visited, and when.&lt;/p&gt;

&lt;p&gt;And there’s more. Facebook bought Instagram, so they can (probably, I don’t have any inside information) associate your activity and photos from there with your Facebook account. Which, by the way, they very strongly want you to populate with your real identity. So your anonymous Instagram account can be associated with your Facebook account.&lt;/p&gt;

&lt;p&gt;None of this explicitly &lt;strong&gt;requires&lt;/strong&gt; big data technologies, but they make the retention and analysis of data at this scale much, much easier. Previously, this sort of activity would have taken some seriously expensive kit, and months of planning to implement, and now, ideas can be implemented almost as quickly as they’re conceived. Companies can pivot how and why they work far more easily.&lt;/p&gt;

&lt;p&gt;Now, maybe you don’t have a Facebook account. You’re not out of reach for their data analysis, unfortunately. Facebook also owns WhatsApp, and WhatsApp is on your phone. Well, it might not be on &lt;em&gt;your&lt;/em&gt; phone, but that doesn’t matter. Here’s why.&lt;/p&gt;

&lt;p&gt;WhatsApp makes finding your friends really easy, because it doesn’t have user names. It uses phone numbers, which is really convenient, and a pretty good way to identify that someone is who they say they are. Of course, as a phone app, it can get this information seamlessly (after asking for permission). Of course, you give it permission, because it doesn’t work otherwise. Now WhatsApp has all your phone numbers, or at least a version that can be compared against other people’s phone numbers.&lt;/p&gt;

&lt;p&gt;So, if your phone number is on the phone of a friend that uses WhatsApp, they can (and do) compare it to those of other people signing up for the app, so they can show people their friends. It’s perfectly possible that WhatsApp (and by extension Facebook) have a very good idea of your group of friends and acquaintances, and all without you going near or using any of their products.&lt;/p&gt;

&lt;p&gt;I’ve chosen Facebook as an example, and they do have a vast pool of your information to draw on, but it’s not just them. Everyone that offers a service for free/nearly free is looking to make money by selling you to advertisers, and the more they know, the better they can sell you. All of this activity is supported, and in large part enabled, by the big data technology stack.&lt;/p&gt;

&lt;p&gt;I don’t think that any of this is necessarily a bad thing, but I do think that people aren’t aware of the amount of their data that is being captured, stored, and analysed. And that &lt;em&gt;is&lt;/em&gt; a bad thing.&lt;/p&gt;
</description>
        <pubDate>Mon, 18 May 2015 07:23:00 +0100</pubDate>
        <link>http://rinbo.consulting/opinion/2015/05/18/big-data-primer.html</link>
        <guid isPermaLink="true">http://rinbo.consulting/opinion/2015/05/18/big-data-primer.html</guid>
        
        <category>Non-technical</category>
        
        
        <category>opinion</category>
        
      </item>
    
      <item>
        <title>mstr-helper&amp;#58; A jQuery plugin to help with MicroStrategy customisation</title>
        <description>&lt;p&gt;So, today I’ve decided to do some of my exploratory work in the open. I’ve published a (very) small jQuery plugin, and accompanying MicroStrategy web plugin to make web customisation (or customization, for Google’s benefit) easier, and simpler to get started with.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/rinbo-consulting/jquery-mstr-helper&quot;&gt;source code is here&lt;/a&gt;, and &lt;a href=&quot;https://www.npmjs.com/package/mstr-helper&quot;&gt;I’ve published to npm too&lt;/a&gt;, which is the new home for jQuery plugins.&lt;/p&gt;

&lt;p&gt;It provides a simple lazy-loading mechanism, and will grow to include various helper functions to make selecting and manipulating elements on the dashboard more straightforward. At first, it just has a selector extension to make finding the appropriate elements to manipulate easier.&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Apr 2015 21:04:00 +0100</pubDate>
        <link>http://rinbo.consulting/microstrategy/2015/04/15/mstr-jquery-helper.html</link>
        <guid isPermaLink="true">http://rinbo.consulting/microstrategy/2015/04/15/mstr-jquery-helper.html</guid>
        
        <category>Technical</category>
        
        <category>SDK</category>
        
        <category>JavaScript</category>
        
        
        <category>microstrategy</category>
        
      </item>
    
      <item>
        <title>Customising MicroStrategy Report Services Documents</title>
        <description>&lt;p&gt;Express mode is in many ways ideal for customisation (or customization, as our American cousins have it) with JavaScript. By locking down the amount of interactivity the user can have with objects you’ve placed on the screen, you have fewer scenarios that your customisations have to cater for.&lt;/p&gt;

&lt;p&gt;There are problems though. If you’re doing something very superficial with jQuery, you’ve probably discovered that it’s not easy to get a reference to the DOM element you want to manipulate, and if you do (usually by finding the ‘K value’ of the object you’re interested in), you also find that it changes when changes are made to the document in MicroStrategy. There’s also the problem of objects not rendering in the DOM until they become visible on screen.&lt;/p&gt;

&lt;p&gt;This is why I would strongly encourage you to become familiar with the developer console in your web browser. There are plenty of objects beyond the HTML DOM to look at.&lt;/p&gt;

&lt;p&gt;In particular, there is the &lt;code&gt;mstrmojo&lt;/code&gt; object, which contains all the JS functionality MicroStrategy uses. It has an &lt;code&gt;all&lt;/code&gt; property which contains references to all of the objects that are on the document, rendered or not. It also has properties that you can use to find the appropriate object every time, which won’t change accidentally when some seemingly-unrelated change is made elsewhere on the document.&lt;/p&gt;

&lt;p&gt;As I say, I encourage you to have a dig around the objects that you can see in the console, but here’s a useful example function to get you started.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/paulbailey/02c150eac6cd72c38e08.js&quot;&gt; &lt;/script&gt;

</description>
        <pubDate>Wed, 08 Oct 2014 13:04:00 +0100</pubDate>
        <link>http://rinbo.consulting/microstrategy/2014/10/08/customising-mstr-express-docs.html</link>
        <guid isPermaLink="true">http://rinbo.consulting/microstrategy/2014/10/08/customising-mstr-express-docs.html</guid>
        
        <category>Technical</category>
        
        <category>SDK</category>
        
        <category>JavaScript</category>
        
        
        <category>microstrategy</category>
        
      </item>
    
      <item>
        <title>MicroStrategy Europe World 2014 - quick thoughts</title>
        <description>&lt;p&gt;&lt;em&gt;Unfortunately my current job doesn’t afford me the opportunity to attend events like this, so I’m just going on the live-streamed keynotes. (As an aside, if you do get the chance to attend, you should. The sessions called “TechTalks” are particularly useful, making experts available to answer your in-depth questions).&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Zero footprint is coming back (bye bye Flash, hello HTML5)&lt;/li&gt;
  &lt;li&gt;The battle with Tableau continues (Desktop continues improving, less gap between Visual Insight and Report Services)&lt;/li&gt;
  &lt;li&gt;Better integration between Desktop and Enterprise (remapping dashboards and their objects to equivalents in the Enterprise dataset)&lt;/li&gt;
  &lt;li&gt;More data sources, data wrangling arrives (manipulating data stored directly in HDFS for example)&lt;/li&gt;
  &lt;li&gt;Web Architect (another nail in the coffin for the old Deskop/Developer application, thank god)&lt;/li&gt;
  &lt;li&gt;Mobile pushes on, lots of geographic/location/proximity stuff, Android app rebuilt&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;More coming&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When I get the chance to watch the sessions in full over the weekend, I’ll come back to this post and flesh it out with some commentary.&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Jul 2014 13:08:00 +0100</pubDate>
        <link>http://rinbo.consulting/microstrategy/2014/07/11/mstr-world-europe-2014.html</link>
        <guid isPermaLink="true">http://rinbo.consulting/microstrategy/2014/07/11/mstr-world-europe-2014.html</guid>
        
        
        <category>microstrategy</category>
        
      </item>
    
      <item>
        <title>Loading JavaScript libraries selectively in MicroStrategy Web</title>
        <description>&lt;p&gt;Hacking JavaScript libraries (jQuery, Prototype, D3.js et al) into the MicroStrategy Web interface is pretty easy (&lt;a href=&quot;http://www.bryanbrandow.com/2013/01/using-jquery-in-microstrategy-dashboards.html&quot;&gt;Bryan describes a couple of ways to do it here&lt;/a&gt;), but there’s a third way, that leverages some built-in MicroStrategy functionality, and allows you to easily execute code when the external libraries are asynchronously loaded.&lt;/p&gt;

&lt;p&gt;It’s an area that the formal documentation doesn’t cover (yet), but &lt;a href=&quot;https://www.microstrategy.com/us/microstrategyworld/resource?world-res=v1247&quot;&gt;buried in this presentation from Las Vegas 2014&lt;/a&gt; is a handy JavaScript function. It’s only available in Express mode, but if you’re customising a document in this manner, you’re almost certainly planning on restricting the functionality to this mode.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/paulbailey/22e06c91e7d41b51a010.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Adding a fragment like that to an HTML Container on your Report Services document will load an external script (or a number of scripts, as the function takes an array), and then call the function you specify once they’ve loaded. It’s an ideal workflow if you need to load a library, and then immediately use it to customise the appearance of the document.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update: &lt;a href=&quot;/microstrategy/2015/04/15/mstr-jquery-helper.html&quot;&gt;I’ve created a simple plugin&lt;/a&gt; to facilitate the sort of selective loading I describe in this post.&lt;/strong&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 24 May 2014 13:04:00 +0100</pubDate>
        <link>http://rinbo.consulting/microstrategy/2014/05/24/load-libraries-selectively.html</link>
        <guid isPermaLink="true">http://rinbo.consulting/microstrategy/2014/05/24/load-libraries-selectively.html</guid>
        
        <category>Technical</category>
        
        <category>SDK</category>
        
        <category>JavaScript</category>
        
        
        <category>microstrategy</category>
        
      </item>
    
      <item>
        <title>Beyond Command Manager, into true source control</title>
        <description>&lt;p&gt;As MicroStrategy’s declared plan to move away from desktops into the cloud progresses, there is one nice side effect. As their old COM-based applications (Desktop/Developer, Object Manager) are allowed to wither on the vine, more functionality moves into their Web API, which means Java, which means plenty of modern technologies for us to leverage.&lt;/p&gt;

&lt;p&gt;I mentioned in an earlier post that Groovy is a Java-based scripting language that already allows us to move past the limited procedural functionality that comes in Command Manager. As more and more functionality (whether it be documented or documented) becomes visible in this API, a true MicroStrategy &lt;a href=&quot;http://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;Domain-specific Language&lt;/a&gt; (DSL) becomes a possibility, &lt;a href=&quot;http://www.slideshare.net/glaforge/groovy-dsls-from-beginner-to-expert-guillaume-laforge-and-paul-king-springone2gx-2011&quot;&gt;using Groovy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Administrative tasks that were previously complex could be made trivially simple, particularly time-intensive ones involving lots of objects. As full creation of all types of objects becomes possible through the web interface, using a DSL to generate objects is also a reality, and that means full, text-based, version control, using whichever platform you decide. Whilst MicroStrategy’s internal dependency checks will still prove useful, those version GUIDs could become irrelevant. True comparision, based on definitions, become the basis for checking the validity of objects between projects.&lt;/p&gt;

&lt;p&gt;Now, this might very well be something MicroStrategy is already planning, but even if it isn’t, it’s a side effect of the move to the cloud, if they choose to do away with their desktop apps. A hugely powerful, mature, and broad, toolset is almost at hand. Exciting times, particularly for those of us working on large deployments.&lt;/p&gt;

</description>
        <pubDate>Thu, 20 Feb 2014 19:37:00 +0000</pubDate>
        <link>http://rinbo.consulting/microstrategy/2014/02/20/beyond-command-manager.html</link>
        <guid isPermaLink="true">http://rinbo.consulting/microstrategy/2014/02/20/beyond-command-manager.html</guid>
        
        <category>Groovy</category>
        
        <category>SDK</category>
        
        <category>Technical</category>
        
        <category>Java</category>
        
        
        <category>microstrategy</category>
        
      </item>
    
      <item>
        <title>Getting Groovy with the MicroStrategy SDK</title>
        <description>&lt;p&gt;MicroStrategy has a reasonably well-documented Web SDK, using Java, but don’t think that you’re restricted to just developing customisations to the web interface.&lt;/p&gt;

&lt;p&gt;Although the functionality of Command Manager has been extended to include procedures, which allows programatic manipulation of objects, it’s still quite limited. It takes one beyond using Excel to create repetitive scripts, but non-trivial tasks are still harder than they should be. This is primarily because Command Manager’s vocabulary is still limited, even though it’s extending with each release.&lt;/p&gt;

&lt;p&gt;Become familiar with the slightly more complicated Web SDK, equip yourself with an installation of &lt;a href=&quot;http://groovy.codehaus.org&quot;&gt;Groovy&lt;/a&gt;, and we can easily create straightforward scripts that accomplish tasks far beyond the realms of what is possible with Command Manager.&lt;/p&gt;

&lt;p&gt;To give a real world example, I recently needed to edit around 2,000 reports which had prompts embedded in their templates. These reports needed the template prompts answered, and then saved in the definition of the report, such that the only prompts that remained were in the report filters.&lt;/p&gt;

&lt;p&gt;There is no mechanism to do this within Command Manager, and I shudder to think how long it would have taken to do manually. The script probably took around 30 minutes to put together (after I had reacquainted myself with the appropriate classes in the SDK), and 10 minutes to execute. Even allowing 30 seconds per report that would have taken over 16 hours to do manually.&lt;/p&gt;

&lt;p&gt;My intention is to build up an open sourced library of useful generic scripts, so I’ll expand on how to install and use Groovy with the MicroStrategy SDK in a future post.&lt;/p&gt;

</description>
        <pubDate>Tue, 11 Feb 2014 20:14:00 +0000</pubDate>
        <link>http://rinbo.consulting/microstrategy/2014/02/11/groovy-and-mstr.html</link>
        <guid isPermaLink="true">http://rinbo.consulting/microstrategy/2014/02/11/groovy-and-mstr.html</guid>
        
        <category>Groovy</category>
        
        <category>SDK</category>
        
        <category>Technical</category>
        
        
        <category>microstrategy</category>
        
      </item>
    
      <item>
        <title>Quick and Dirty</title>
        <description>&lt;p&gt;“Quick and dirty” also means “cheap and done”. Worth remembering when someone uses it in a pejorative sense. &lt;/p&gt;

&lt;p&gt;Particularly when their project is late, and over-budget.&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Nov 2013 21:59:00 +0000</pubDate>
        <link>http://rinbo.consulting/observations/2013/11/14/quick-and-dirty.html</link>
        <guid isPermaLink="true">http://rinbo.consulting/observations/2013/11/14/quick-and-dirty.html</guid>
        
        <category>Non-technical</category>
        
        
        <category>observations</category>
        
      </item>
    
  </channel>
</rss>
